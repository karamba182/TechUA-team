---
- name: Deploy TeachUA Frontend Application
  hosts: gcp_group_instance_front_group
  become: yes
  vars:
    frontend_dest: "/var/www/teachua"
    
  tasks:
    - name: Install nginx web server
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Create frontend directory
      file:
        path: "{{ frontend_dest }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Remove existing frontend files
      file:
        path: "{{ frontend_dest }}"
        state: absent
      
    - name: Recreate frontend directory
      file:
        path: "{{ frontend_dest }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Create local archive of frontend build
      local_action:
        module: archive
        path: "./build/frontend/build/*"
        dest: "./build/frontend-build.tar.gz"
        format: gz
      become: no

    - name: Copy frontend archive to server
      copy:
        src: "./build/frontend-build.tar.gz"
        dest: "/tmp/frontend-build.tar.gz"

    - name: Extract frontend archive
      unarchive:
        src: "/tmp/frontend-build.tar.gz"
        dest: "{{ frontend_dest }}"
        remote_src: yes
        owner: www-data
        group: www-data

    - name: Remove temporary archive
      file:
        path: "/tmp/frontend-build.tar.gz"
        state: absent

    - name: Configure nginx virtual host
      copy:
        content: |
          server {
              listen 80;
              server_name _;
              
              root {{ frontend_dest }};
              index index.html;
              
              # Enable gzip compression for better performance
              gzip on;
              gzip_vary on;
              gzip_min_length 1024;
              gzip_types
                  text/plain
                  text/css
                  text/xml
                  text/javascript
                  application/x-javascript
                  application/xml+rss
                  application/javascript
                  application/json;
              
              # Handle React Router client-side routing
              location / {
                  try_files $uri $uri/ /index.html;
              }
              
              # Static assets caching for performance
              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
                  try_files $uri =404;
              }
          }
        dest: /etc/nginx/sites-available/teachua-frontend

    - name: Enable nginx site configuration
      file:
        src: /etc/nginx/sites-available/teachua-frontend
        dest: /etc/nginx/sites-enabled/teachua-frontend
        state: link

    - name: Remove default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart nginx service
      service:
        name: nginx
        state: restarted
        enabled: yes
        
    - name: Verify frontend deployment
      uri:
        url: "http://localhost/"
        method: GET
        status_code: 200
      register: frontend_test
      
    - name: Display deployment verification result
      debug:
        msg: "Frontend deployment successful! HTTP Status: {{ frontend_test.status }}"
